<?php
// $Id$
define('AJXP_EXEC', true);

function ajaxplorer_help($path, $arg){
  $output = '';  //declare your output variable
  switch ($path) {
    case "admin/help#ajaxplorer":
      $output = '<p>'.  t("Will create a bridge between drupal and AjaXplorer users.") .'</p>';
      break;
  }
  return $output;
}

function ajaxplorer_perm(){
	return array("administrate ajaxplorer repositories", 'access personal ajaxplorer repository');
}

function ajaxplorer_user($op, &$edit, $account, $category = null){
	require_once("class.DrupalAjxp.php");
 	$params = array(
    "ajxp_install_path" => variable_get('ajaxplorer_install_path', ""),
    "ajxp_secret_key" => variable_get('ajaxplorer_secret_key', ""),
    "ajxp_auto_create" => (variable_get('ajaxplorer_auto_create', "0") == "0" ? TRUE : FALSE),
  );
	$drupHandler = new DrupalAjxp($params);
	if(!$drupHandler->glueCodeFound) return ;
	switch ($op) {
		case "login":
      if (user_access('access personal ajaxplorer repository')) {
        $drupHandler->onLoginUser($account->name, $account->pass);
      }
			break;

		case "logout":
			$drupHandler->onLogout($account->name);
			break;

		case "insert":
		case "after_update":
			$result = $drupHandler->onAfterStoreUser($account->name, $account->pass, user_access("administrate ajaxplorer repositories", $account), ($op == "insert"));
			break;

		case "delete":
			$drupHandler->onAfterDeleteUser($account->name);
			break;

		default:
			break;
	}

}

function ajaxplorer_menu() {

  $items = array();

  $items['admin/settings/ajaxplorer'] = array(
    'title' => 'AjaXplorer Settings',
    'description' => 'AjaXplorer bridge settings, it is necessary to fill them to make this module work.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ajaxplorer_admin'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['manage-site'] = array(
    'title' => 'File Browser',
    'access callback' => 'user_access',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ajaxplorer_user_display'),
    'access arguments' => array('create own openscholar site'),
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

function ajaxplorer_admin() {
  $form = array();

  $form['ajaxplorer_install_path'] = array(
    '#type' => 'textfield',
    '#title' => t('AjaXplorer Install Path'),
    '#default_value' => variable_get('ajaxplorer_install_path', ""),
    '#size' => 50,
    '#description' => t("Absolute path to the root folder of your AjaXplorer installation, the one containing the index.php file. <b>No trailing slash at the end.</b>"),
    '#required' => TRUE,
  );

  $form['ajaxplorer_url'] = array(
    '#type' => 'textfield',
    '#title' => t('AjaxPlorer URL'),
    '#default_value' => variable_get('ajaxplorer_url', ""),
    '#size' => 50,
    '#description' => t("The url to the ajaxplorer web page."),
    '#required' => TRUE,
  );

  $form['ajaxplorer_secret_key'] = array(
    '#type' => 'textfield',
    '#title' => t('Secret Key'),
    '#default_value' => variable_get('ajaxplorer_secret_key', ""),
    '#size' => 50,
    '#description' => t("Must be the same string as the one found in your AUTH_DRIVER configuration of AjaXplorer."),
    '#required' => TRUE,
  );

  $form['ajaxplorer_auto_create'] = array(
    '#type' => 'radios',
    '#title' => t('Auto Create'),
    '#default_value' => variable_get('ajaxplorer_auto_create', 0),
    '#options' => array("True", "False"),
    '#description' => t("Whether the user will be created automatically at login time (true), or if they must be created before (false)"),
    '#required' => TRUE,
  );

  return system_settings_form($form);
}

function ajaxplorer_user_display() {
  global $user;
  $form = array();

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Switch your site'),
    '#weight' => 40,
  );

  $form['#submit'] = array('ajaxplorer_user_display_submit');

  $form['ajaxplorer_use_openscholar'] = array(
    '#type' => 'radios',
    '#title' => t('Type of site'),
    '#description' => t('Choose if you want to use our site building software or build your own site from scratch.'),
    '#default_value' => (!in_array('self hoster', $user->roles)) ? 1 : 0,
    '#options' => array(
      1 => t('I want to use the tools available through the site builder and have the UC Merced brand'),
      0 => t('I will build my own site on my local machine and just upload it')
    ),
    '#prefix' => '<div id="site-type-item">',
    '#suffix' => '</div>',
  );

  $ajaxplorer_url = variable_get('ajaxplorer_url', '');
  if (!empty($ajaxplorer_url) && in_array('self hoster', $user->roles)) {
    $form['ajaxplorer_file_browser'] = array(
      '#value' => '<iframe src="' . $ajaxplorer_url . '" width="100%" height="500px"></iframe>',
    );
  }

  return $form;
}

function ajaxplorer_user_display_submit($form, &$form_state) {
  global $user;
  $role_name = 'self hoster';
  $rid = db_result(db_query("SELECT rid FROM {role} WHERE name = '%s'", $role_name));
  if (empty($form_state['values']['ajaxplorer_use_openscholar'])) {
    if (!isset($user->roles[$rid])) {
      $roles = $user->roles + array($rid => $role_name);
      user_save($user, array('roles' => $roles));
    }
  }
  else {
    if (isset($user->roles[$rid])) {
      $roles = array_diff($user->roles, array($rid => $role_name));
      user_save($user, array('roles' => $roles));
    }
  }
}
